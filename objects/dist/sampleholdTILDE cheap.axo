<objdefs>
   <obj.normal id="samplehold~ cheap" uuid="dcfaef226ae39211ccf68b26ed2ebb779448954d" sha="92fe0210fc39b1900f332eaa30f9cd9bfaf4036c">
      <upgradeSha>2cee48716f298f310de868cdc8ca00d4a2f34205</upgradeSha>
      <sDescription>low-quality audio rate sample and hold using blit synthesis (not bandwidth limited)</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <frac32buffer name="in" description="level input"/>
         <frac32buffer name="trig" description="trigger input, triggers on rising zero-crossing"/>
      </inlets>
      <outlets>
         <frac32buffer.bipolar name="out" description="audio output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[  int32_t in0;
  int32_t hold;
]]></code.declaration>
      <code.init><![CDATA[  in0 = 0;
  hold = 0;
]]></code.init>
      <code.srate><![CDATA[  if ((inlet_trig[buffer_index]>0)&&!(in0>0)){
    hold = inlet_in[buffer_index]>>1;
  }
  in0 = inlet_trig[buffer_index];
  outlet_out[buffer_index] = hold;
]]></code.srate>
   </obj.normal>
</objdefs>