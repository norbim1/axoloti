<objdefs>
   <obj.normal id="fdbkcomb" uuid="b252513db2f8cc9a8964bad2a8eb7922be08690f" sha="d424667b4829235998277860e45548ad6e068dcb">
      <upgradeSha>545bfc2c024322a105e8ab12a2b44003713c4916</upgradeSha>
      <sDescription>feedback comb filter, y(n) = b*x(n)+a*y(n-D)</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>fdbkcomb.axh</helpPatch>
      <inlets>
         <frac32buffer name="in" description="in"/>
      </inlets>
      <outlets>
         <frac32buffer name="out" description="out"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.ratio name="a">
            <MinValue v="-64.0"/>
            <MaxValue v="63.5"/>
         </frac32.s.map.ratio>
         <frac32.s.map.ratio name="b">
            <MinValue v="-64.0"/>
            <MaxValue v="63.5"/>
         </frac32.s.map.ratio>
      </params>
      <attribs>
         <spinner name="delay" MinValue="1" MaxValue="10000" DefaultValue="1000"/>
      </attribs>
      <code.declaration><![CDATA[int16_t d[attr_delay];
int dpos;
]]></code.declaration>
      <code.init><![CDATA[int i;
for (i=0;i<attr_delay;i++)
   d[i] = 0;
dpos = 0;
]]></code.init>
      <code.krate><![CDATA[int32_t a2 = param_a<<4;
int32_t b2 = param_b<<4;
]]></code.krate>
      <code.srate><![CDATA[int32_t dout =  d[dpos]<<16;
int32_t din = ___SMMUL(b2,inlet_in[buffer_index]);
din = ___SMMLA(a2,dout,din);
d[dpos++]=din>>15;
outlet_out[buffer_index] = din;
if (dpos == attr_delay) dpos = 0;
]]></code.srate>
   </obj.normal>
</objdefs>