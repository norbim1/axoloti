<objdefs>
   <obj.normal id="read interp" uuid="1bca60fd6df527e5157077e476ecb0778c799737" sha="bb013b06aba7d6ab94f5e30a9058ad9bce2d8db4">
      <upgradeSha>22a07dcbe5007bc4095bed25946486e7c98caf23</upgradeSha>
      <sDescription>delay read, linear interpolated</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>delay.axh</helpPatch>
      <inlets>
         <frac32buffer name="timem" description="delay time (fraction of total delayline size)"/>
      </inlets>
      <outlets>
         <frac32buffer name="out" description="wave"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map name="time" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map>
      </params>
      <attribs>
         <objref name="delayname"/>
      </attribs>
      <code.srate><![CDATA[      uint32_t tmp_d =  __USAT(param_time + inlet_timem[buffer_index],27);
      uint32_t tmp_di = attr_delayname.writepos - (tmp_d>>(27-attr_delayname.LENGTHPOW)) - BUFSIZE + buffer_index -1;
      uint32_t tmp_w1 = (tmp_d<<(attr_delayname.LENGTHPOW+3)) & 0x3FFFFFFF;
      uint32_t tmp_w2 = (1<<30) - tmp_w1;
      int32_t tmp_a1 = attr_delayname.array[tmp_di&attr_delayname.LENGTHMASK]<<16;
      int32_t tmp_a2 = attr_delayname.array[(tmp_di+1)&attr_delayname.LENGTHMASK]<<16;
      int32_t tmp_r = ___SMMUL(tmp_a1,tmp_w1);
      tmp_r = ___SMMLA(tmp_a2,tmp_w2,tmp_r);
      outlet_out[buffer_index]= tmp_r;
]]></code.srate>
   </obj.normal>
</objdefs>