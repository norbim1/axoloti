<objdefs>
<<<<<<< HEAD
   <obj.normal id="taptempo" sha="8bb401d9aeeb03766410f8e632d1f825c8330aca">
      <sDescription>taptempo follower</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
=======
   <obj.normal id="taptempo" uuid="c3cd3d6e4689d9a8418fb6688b980f022711e2e4" sha="e9dd8db69962757a123d584a7213a05c2dc4daf9">
      <upgradeSha>f8a314659995f772afd971e2e8864168c1b6c2fa</upgradeSha>
      <sDescription>taptempo follower</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>taptempo.axh</helpPatch>
>>>>>>> JohannesTaelman/master
      <inlets>
         <bool32.rising name="tap" description="tap tap tap"/>
      </inlets>
      <outlets>
<<<<<<< HEAD
         <frac32.positive name="phasor" description="phasor" SumBuffer="false"/>
         <bool32.pulse name="24ppq" description="24ppq" SumBuffer="false"/>
         <bool32.pulse name="index" description="index" SumBuffer="false"/>
         <frac32.positive name="int1" description="" SumBuffer="false"/>
         <frac32.positive name="int2" description="" SumBuffer="false"/>
=======
         <frac32.positive name="phasor" description="phasor"/>
         <bool32.pulse name="24ppq" description="24ppq"/>
         <bool32.pulse name="index" description="index"/>
         <frac32.positive name="int1" description=""/>
         <frac32.positive name="int2" description=""/>
>>>>>>> JohannesTaelman/master
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[int32_t trigtap;
int32_t tc;
int32_t tlatch;
]]></code.declaration>
      <code.init><![CDATA[trigtap = 0;
tlatch = 0;
tc = 0;
]]></code.init>
<<<<<<< HEAD
      <code.krate><![CDATA[if ((%tap% > 0) && !trigtap) {
  tc = 0;
  trigtap = 1;
}%t% = tlatch;
tc++;
=======
      <code.krate><![CDATA[int tol = 0x10000000;
if ((inlet_tap > 0) && !trigtap) {
  tlatch = tc;
  if (tlatch<4096) {
     frql = 0xFFFFFFFF/(tlatch+1);
  }
  tc = 0;
  trigtap = 1;
  if ((acc>-tol)&&(acc<tol)){
     // low deviation: catch
     acc = 0;
  } else {
     // high deviation: flywheel
     acc = acc-(acc>>5);
  }
} else if (!(inlet_tap > 0)){
  trigtap = 0;
}
tc++;
acc += frql;
outlet_int1 = tlatch;
outlet_phasor = acc>>4;
>>>>>>> JohannesTaelman/master
]]></code.krate>
   </obj.normal>
</objdefs>